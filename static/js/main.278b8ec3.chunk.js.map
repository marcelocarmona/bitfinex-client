{"version":3,"sources":["store/ticker/actions.js","components/MainTicker/MainTicker.js","store/trades/actions.js","components/Trades/Trades.js","store/orderBook/actions.js","components/OrderBook/OrderBook.js","store/ticker/reducer.js","store/orderBook/reducer.js","store/trades/reducer.js","App.js","serviceWorker.js","index.js"],"names":["TICKER_UPDATE_MESSAGE","updateTicker","payload","type","Ticker","this","props","tickerConnection","_this$props$ticker","ticker","VOLUME","LOW","HIGH","LAST_PRICE","DAILY_CHANGE","DAILY_CHANGE_PERC","pair","react_default","a","createElement","className","PureComponent","connect","state","dispatch","ws","WebSocket","addEventListener","msg","data","JSON","parse","event","streamFields","_streamFields","Object","slicedToArray","BID","BID_SIZE","ASK","ASK_SIZE","stringify","channel","symbol","send","error","console","message","close","TRADE_UPDATE_MESSAGE","TRADE_ADD_MESSAGE","updateTrades","tradesConnection","trades","newTrade","Traders","tBTCUSD","map","_ref","_ref2","ID","MTS","AMOUNT","PRICE","key","Date","toLocaleTimeString","BOOK_SNAPSHOT_MESSAGE","BOOK_UPDATE_MESSAGE","orderBookConnection","frequency","presision","_state$book$channel","book","freq","prec","length","setSnapshotBook","updateBook","OrderBook","changePrecision","preventDefault","_this","target","value","changeFrequency","_this$props","asks","bids","Fragment","onChange","keys","price","count","amount","initialState","arguments","undefined","action","objectSpread","chanId","len","books","reduce","acc","currentIndex","defineProperty","_action$payload$","bidsCopy","asksCopy","concat","toConsumableArray","slice","reducers","reducer","combineReducers","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","es","MainTicker_MainTicker","Trades_Trades","components_OrderBook_OrderBook","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.278b8ec3.chunk.js","sourcesContent":["/*\n * action types\n */\n\nexport const TICKER_UPDATE_MESSAGE = 'TICKER-UPDATE_MESSAGE';\n\n/*\n * action creators\n */\n\nexport function updateTicker(payload) {\n  return { type: TICKER_UPDATE_MESSAGE, payload };\n}\n\n/*\n * thunk actions\n */\n\nexport function tickerConnection() {\n  // default symbol\n  const symbol = 'tBTCUSD';\n  return function(dispatch) {\n    const ws = new WebSocket('wss://api.bitfinex.com/ws/2');\n\n    ws.addEventListener('message', msg => {\n      const data = JSON.parse(msg.data);\n      if (data.event === 'subscribed') {\n        dispatch(updateTicker({ pair: data.pair }));\n      } else if (data.event === 'info') {\n        // nothing for now\n      } else {\n        const streamFields = data[1];\n        if (streamFields !== 'hb') {\n          const [\n            BID,\n            BID_SIZE,\n            ASK,\n            ASK_SIZE,\n            DAILY_CHANGE,\n            DAILY_CHANGE_PERC,\n            LAST_PRICE,\n            VOLUME,\n            HIGH,\n            LOW\n          ] = streamFields;\n          dispatch(\n            updateTicker({\n              BID,\n              BID_SIZE,\n              ASK,\n              ASK_SIZE,\n              DAILY_CHANGE,\n              DAILY_CHANGE_PERC,\n              LAST_PRICE,\n              VOLUME,\n              HIGH,\n              LOW\n            })\n          );\n        }\n      }\n    });\n\n    const msg = JSON.stringify({\n      event: 'subscribe',\n      channel: 'ticker',\n      symbol\n    });\n    ws.addEventListener('open', () => ws.send(msg));\n    ws.addEventListener('error', error => {\n      console.error(\n        'Socket encountered error: ',\n        error.message,\n        'Closing socket'\n      );\n      ws.close();\n    });\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { tickerConnection } from '../../store/ticker/actions';\nimport './MainTicker.css';\n\nclass Ticker extends PureComponent {\n  componentDidMount() {\n    this.props.tickerConnection();\n  }\n\n  render() {\n    const {\n      VOLUME,\n      LOW,\n      HIGH,\n      LAST_PRICE,\n      DAILY_CHANGE,\n      DAILY_CHANGE_PERC,\n      pair\n    } = this.props.ticker;\n    return (\n      <div className=\"ticker\">\n        <div className=\"ticker__column\">\n          <div>{pair}</div>\n          <div>VOL {VOLUME}</div>\n          <div>LOW {LOW}</div>\n        </div>\n        <div className=\"ticker__column\">\n          <div>{LAST_PRICE}</div>\n          <div>\n            {DAILY_CHANGE}({DAILY_CHANGE_PERC}%)\n          </div>\n          <div>HIGH {HIGH}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ticker: state.ticker\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tickerConnection: () => {\n      dispatch(tickerConnection());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Ticker);\n","/*\n * action types\n */\n\nexport const TRADE_UPDATE_MESSAGE = 'TRADE-UPDATE_MESSAGE';\nexport const TRADE_ADD_MESSAGE = 'TRADE-ADD_MESSAGE';\n\n/*\n * action creators\n */\n\nexport function updateTrades(payload) {\n  return { type: TRADE_UPDATE_MESSAGE, payload };\n}\n\nexport function addTrade(payload) {\n  return { type: TRADE_ADD_MESSAGE, payload };\n}\n\n/*\n * thunk actions\n */\n\nexport function tradesConnection() {\n  // default symbol\n  const symbol = 'tBTCUSD';\n  return function(dispatch, state) {\n    const ws = new WebSocket('wss://api.bitfinex.com/ws/2');\n\n    ws.addEventListener('message', msg => {\n      const data = JSON.parse(msg.data);\n\n      if (data.event === 'subscribed') {\n        dispatch(updateTrades({ symbol: data.symbol, trades: [] }));\n      } else if (data.event === 'info') {\n        //nothing\n      } else {\n        const streamFields = data[1];\n\n        if (streamFields === 'tu') {\n          const newTrade = data[2];\n          dispatch(addTrade({ symbol, newTrade }));\n        } else if (streamFields !== 'hb' && streamFields !== 'te') {\n          const trades = streamFields;\n          dispatch(updateTrades({ symbol, trades }));\n        }\n      }\n    });\n\n    const msg = JSON.stringify({\n      event: 'subscribe',\n      channel: 'trades',\n      symbol\n    });\n    ws.addEventListener('open', () => ws.send(msg));\n    ws.addEventListener('error', error => {\n      console.error(\n        'Socket encountered error: ',\n        error.message,\n        'Closing socket'\n      );\n      ws.close();\n    });\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { tradesConnection } from '../../store/trades/actions';\nimport './Trades.css';\n\nclass Traders extends PureComponent {\n  componentDidMount() {\n    this.props.tradesConnection();\n  }\n\n  render() {\n    const { trades } = this.props;\n    return (\n      <div className=\"trade\">\n        <table>\n          <thead>\n            <tr>\n              <th />\n              <th>TIME</th>\n              <th>AMOUNT</th>\n              <th>PRICE</th>\n            </tr>\n          </thead>\n          <tbody>\n            {trades.tBTCUSD.map(([ID, MTS, AMOUNT, PRICE]) => (\n              <tr\n                key={ID}\n                className={AMOUNT > 0 ? 'trade--bought' : 'trade--sold'}\n              >\n                <td>{AMOUNT > 0 ? '🔺' : '🔻'}</td>\n                <td>{new Date(MTS).toLocaleTimeString()}</td>\n                <td>{AMOUNT}</td>\n                <td>{PRICE}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    trades: state.trades\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    tradesConnection: () => {\n      dispatch(tradesConnection());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Traders);\n","/*\n * action types\n */\n\nexport const BOOK_SNAPSHOT_MESSAGE = 'BOOK-SNAPSHOT_MESSAGE';\nexport const BOOK_UPDATE_MESSAGE = 'BOOK-UPDATE_MESSAGE';\n\n/*\n * action creators\n */\n\nexport function updateBook({ channel, payload }) {\n  return { type: BOOK_UPDATE_MESSAGE, channel, payload };\n}\n\nexport function setSnapshotBook({ channel, payload }) {\n  return { type: BOOK_SNAPSHOT_MESSAGE, channel, payload };\n}\n\n/*\n * thunk actions\n */\n\n// websocket cache\nlet ws = null;\n/**\n * Maintain the book connection, just one connection can exist at the same time\n *\n * @param {string} frequency Frequency of updates (F0, F1).F0=realtime / F1=2sec\n * @param {string} presision Level of price aggregation (P0, P1, P2, P3)\n */\nexport function orderBookConnection(frequency, presision) {\n  return function(dispatch, state) {\n    // check if no exist a current connection\n    if (!ws) {\n      ws = new WebSocket('wss://api.bitfinex.com/ws/2');\n    } else {\n      ws.close();\n      ws = new WebSocket('wss://api.bitfinex.com/ws/2');\n    }\n\n    // open\n    ws.addEventListener('open', () => {\n      const { symbol, freq, prec } = state().book.channel;\n      const msg = JSON.stringify({\n        event: 'subscribe',\n        channel: 'book',\n        symbol,\n        freq: frequency ? frequency : freq,\n        prec: presision ? presision : prec\n      });\n      ws.send(msg);\n    });\n\n    // message\n    let channel = null;\n    ws.addEventListener('message', msg => {\n      const data = JSON.parse(msg.data);\n      if (data.event === 'subscribed') {\n        channel = data;\n      } else if (data.event === 'info') {\n        // nothing yet\n      } else {\n        const streamFields = data[1];\n        if (streamFields.length === 50) {\n          dispatch(setSnapshotBook({ channel, payload: data }));\n        } else {\n          if (streamFields !== 'hb') {\n            dispatch(updateBook({ channel, payload: data }));\n          }\n        }\n      }\n    });\n\n    // error\n    ws.addEventListener('error', error => {\n      console.error(\n        'Socket encountered error: ',\n        error.message,\n        'Closing socket'\n      );\n      ws.close();\n    });\n  };\n}\n","import React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { orderBookConnection } from '../../store/orderBook/actions';\nimport './OrderBook.css';\n\nclass OrderBook extends PureComponent {\n  componentDidMount() {\n    this.props.orderBookConnection('F1', 'P0');\n  }\n\n  changePrecision = event => {\n    event.preventDefault();\n    this.props.orderBookConnection(null, event.target.value);\n  };\n\n  changeFrequency = event => {\n    event.preventDefault();\n    this.props.orderBookConnection(event.target.value);\n  };\n\n  render() {\n    const { asks, bids, channel } = this.props;\n    return (\n      <>\n        {channel && (\n          <div>\n            Frequency {channel.freq}\n            &nbsp;\n            <select onChange={this.changeFrequency}>\n              <option value=\"F1\">F1</option>\n              <option value=\"F0\">F0</option>\n            </select>\n            &nbsp; Precision Level {channel.prec}\n            &nbsp;\n            <select onChange={this.changePrecision}>\n              <option value=\"P0\">P0</option>\n              <option value=\"P1\">P1</option>\n              <option value=\"P2\">P2</option>\n              <option value=\"P3\">P3</option>\n            </select>\n          </div>\n        )}\n        <div className=\"book\">\n          <table>\n            <thead>\n              <tr>\n                <th>COUNT</th>\n                <th>AMOUNT</th>\n                <th>PRICE</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(asks).map(price => (\n                <tr key={price}>\n                  <td>{asks[price].count}</td>\n                  <td>{asks[price].amount}</td>\n                  <td>{asks[price].price}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <table>\n            <thead>\n              <tr>\n                <th>PRICE</th>\n                <th>AMOUNT</th>\n                <th>COUNT</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(bids).map(price => (\n                <tr key={price}>\n                  <td>{bids[price].price}</td>\n                  <td>{bids[price].amount}</td>\n                  <td>{bids[price].count}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    channel: state.book.channel,\n    asks: state.book.asks,\n    bids: state.book.bids\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    orderBookConnection: (freq, prec) => {\n      dispatch(orderBookConnection(freq, prec));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(OrderBook);\n","import { TICKER_UPDATE_MESSAGE } from './actions';\n\nconst initialState = {\n  pair: 'BTCUSD',\n  BID: 0,\n  BID_SIZE: 0,\n  ASK: 0,\n  ASK_SIZE: 0,\n  DAILY_CHANGE: 0,\n  DAILY_CHANGE_PERC: 0,\n  LAST_PRICE: 0,\n  VOLUME: 0,\n  HIGH: 0,\n  LOW: 0\n};\n\nfunction ticker(state = initialState, action) {\n  switch (action.type) {\n    case TICKER_UPDATE_MESSAGE:\n      return {\n        ...state,\n        ...action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default ticker;\n","import { BOOK_UPDATE_MESSAGE, BOOK_SNAPSHOT_MESSAGE } from './actions';\n\nconst initialState = {\n  channel: {\n    event: null,\n    channel: 'book',\n    chanId: null,\n    symbol: 'tBTCUSD',\n    prec: 'P0',\n    freq: 'F1',\n    len: '25',\n    pair: 'BTCUSD'\n  },\n  asks: {},\n  bids: {}\n};\n\nfunction book(state = initialState, action) {\n  switch (action.type) {\n    case BOOK_SNAPSHOT_MESSAGE:\n      let books = action.payload[1];\n      books = books.reduce(\n        (acc, [price, count, amount], currentIndex) =>\n          currentIndex < 25\n            ? {\n                ...acc,\n                asks: { ...acc.asks, [price]: { amount, count, price } }\n              }\n            : {\n                ...acc,\n                bids: { ...acc.bids, [price]: { amount, count, price } }\n              },\n        initialState\n      );\n      return { ...books, channel: action.channel };\n    case BOOK_UPDATE_MESSAGE:\n      /*\n        when count > 0 then you have to add or update the price level\n        3.1 if amount > 0 then add/update bids\n        3.2 if amount < 0 then add/update asks\n        when count = 0 then you have to delete the price level.\n        4.1 if amount = 1 then remove from bids\n        4.2 if amount = -1 then remove from asks\n      */\n      const [price, count, amount] = action.payload[1];\n      if (count > 0) {\n        if (amount > 0) {\n          return {\n            ...state,\n            bids: { ...state.bids, [price]: { amount, count, price } }\n          };\n        }\n        if (amount < 0) {\n          return {\n            ...state,\n            asks: { ...state.asks, [price]: { amount, count, price } }\n          };\n        }\n      } else if (count === 0) {\n        if (amount === 1) {\n          const bidsCopy = { ...state.bids };\n          delete bidsCopy[price];\n          return {\n            ...state,\n            bids: bidsCopy\n          };\n        }\n        if (amount === -1) {\n          const asksCopy = { ...state.asks };\n          delete asksCopy[price];\n          return {\n            ...state,\n            asks: asksCopy\n          };\n        }\n      }\n      return {\n        ...state\n      };\n    default:\n      return state;\n  }\n}\n\nexport default book;\n","import { TRADE_UPDATE_MESSAGE, TRADE_ADD_MESSAGE } from './actions';\n\nconst initialState = {\n  tBTCUSD: []\n};\n\nfunction trades(state = initialState, action) {\n  switch (action.type) {\n    case TRADE_UPDATE_MESSAGE:\n      return {\n        ...state,\n        [action.payload.symbol]: action.payload.trades\n      };\n    case TRADE_ADD_MESSAGE:\n      return {\n        ...state,\n        [action.payload.symbol]: [\n          action.payload.newTrade,\n          ...state[action.payload.symbol].slice(0, -1)\n        ]\n      };\n    default:\n      return state;\n  }\n}\n\nexport default trades;\n","import React, { Component } from 'react';\nimport MainTicker from './components/MainTicker/MainTicker';\nimport Trades from './components/Trades/Trades';\nimport OrderBook from './components/OrderBook/OrderBook';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport ticker from './store/ticker/reducer';\nimport book from './store/orderBook/reducer';\nimport trades from './store/trades/reducer';\nimport thunk from 'redux-thunk';\nimport './App.css';\n\nconst reducers = {\n  ticker,\n  book,\n  trades\n};\n\nconst reducer = combineReducers(reducers);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store: Store = createStore(\n  reducer,\n  composeEnhancer(applyMiddleware(thunk))\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <MainTicker />\n          <Trades />\n          <OrderBook />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}